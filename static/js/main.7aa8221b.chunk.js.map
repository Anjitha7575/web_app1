{"version":3,"sources":["features/Header/styles.js","constants/index.js","features/Login/SignIn/styles.js","features/Login/SignIn/component.js","actions/login.js","actionTypes.js","features/Login/SignIn/container.js","features/Login/styles.js","features/Login/component.js","features/Login/container.js","features/Header/component.js","features/Dashboard/SearchBar/styles.js","features/Dashboard/SearchBar/component.js","utils/index.js","features/Dashboard/SearchBar/container.js","features/Dashboard/Tiles/styles.js","features/Dashboard/Tiles/component.js","features/Dashboard/Tiles/container.js","features/Dashboard/styles.js","features/Dashboard/component.js","actions/movies.js","features/Dashboard/container.js","App.js","serviceWorker.js","reducers/index.js","index.js","assets/green1.jpg","assets/moviedb.png","assets/darkLoad.gif","assets/green.jpg"],"names":["HeaderMain","styled","div","HeaderImg","img","Leftpanel","HeaderImage","require","LoadingIcon","MainBlock","ErrorField","Divider","styles","backgroundColor","color","SignIn","props","login","getLoginResponse","state","signUp","submitNewUsrs","changeEvent","ev","target","name","value","setState","showLoginStatus","loginData","status","checkValidation","userName","pswd","_isEmpty","nextProps","this","closeModal","submitUserResponse","className","type","placeholder","onChange","required","style","onClick","disabled","Component","loginProcess","obj","payload","submitProcess","setLocalData","dispatch","userLoginData","JSON","parse","localStorage","getItem","currentUser","setItem","stringify","connect","loginResponse","vals","validUser","map","user","push","concat","UserBlc","span","LoginBtn","button","modalStyle","content","top","left","right","bottom","marginRight","transform","LoginApp","logout","isModalOpen","userObj","_get","loggedIn","openModalHandler","bind","isOpen","ariaHideApp","onRequestClose","closeModalHandler","Header","src","SearchBox","HistoryBox","HistoryList","SearchBar","handleSearchChange","submitSearch","getLatestSearch","sendData","searchText","language","searchHistory","unshift","length","splice","deleteAll","deleteOneHistory","index","title","allMovies","langOptions","response","results","reduce","unique","o","getMovieLanguages","id","key","lang","history","allLanguages","Grid","Box","Title","Lang","Rate","ViewDetails","Tiles","data","searchData","filterData","filter","movie","toLowerCase","includes","original_language","data-tip","overview","original_title","vote_average","MoviesBox","LoadingImg","MainView","PaginationBox","Dashboard","showMovieStatus","alt","goToPrev","currentPage","total_pages","getMovies","goToNext","getMoviesByPage","prevProps","fetchAllMovies","languages","pageNo","fetch","method","headers","then","res","json","console","log","catch","error","App","Boolean","window","location","hostname","match","combineReducers","action","middlewares","compose","applyMiddleware","thunk","devToolsExtension","f","appStore","createStore","rootReducer","undefined","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"opBAEO,IAAMA,EAAaC,IAAOC,IAAV,KAKVC,EAAYF,IAAOG,IAAV,KAKTC,EAAYJ,IAAOC,IAAV,KCZTI,GDkBYL,IAAOC,IAAV,KClBKK,EAAQ,KACtBC,EAAcD,EAAQ,I,GACVA,EAAQ,I,2xCCA1B,IAAME,EAAYR,IAAOC,IAAV,KA8DTQ,EAAaT,IAAOC,IAAV,KAMVS,EAAUV,IAAOC,IAAV,KC/DdU,EACc,CACdC,gBAAiB,OACjBC,MAAO,QA+EEC,E,kDA1EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,MAAQ,WACJ,EAAKD,MAAME,iBAAiB,EAAKC,QANlB,EASnBC,OAAS,WACL,EAAKJ,MAAMK,cAAc,EAAKF,QAVf,EAkBnBG,YAAc,SAACC,GAAQ,IAAD,EACMA,EAAGC,OAAnBC,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,KApBT,EAuBnBE,gBAAkB,SAACC,GACf,OAAQA,EAAUC,QACd,IAAK,UACD,OAAO,KACX,IAAK,UACD,MAAO,aACX,IAAK,QACD,OAAO,kBAACpB,EAAD,sCACX,QACI,OAAO,OAhCA,EAoCnBqB,gBAAkB,WAAO,IAAD,EACO,EAAKZ,MAAxBa,EADY,EACZA,SAAUC,EADE,EACFA,KAClB,SAAKC,IAASF,KAAcE,IAASD,KApCrC,EAAKd,MAAQ,CAAEa,SAAU,GAAIC,KAAM,IAFpB,E,sEAYOE,GACc,YAA/BA,EAAUN,UAAUC,QACrBM,KAAKpB,MAAMqB,e,+BA+BT,IAAD,EACqCD,KAAKpB,MAAvCa,EADH,EACGA,UADH,EACcS,mBACnB,OACI,kBAAC7B,EAAD,KACI,yBAAK8B,UAAU,QACX,yBAAKA,UAAU,aACX,+BAAO,wCACP,2BAAOC,KAAK,OAAOC,YAAY,iBAAiBhB,KAAK,WAAWiB,SAAUN,KAAKd,YAAaqB,UAAQ,IAEpG,+BAAO,wCACP,2BAAOH,KAAK,WAAWC,YAAY,iBAAiBhB,KAAK,OAAOiB,SAAUN,KAAKd,YAAaqB,UAAQ,IACpG,yBAAKC,MAAO,CAAE,QAAW,SACrB,4BAAQC,QAAST,KAAKnB,OAAtB,SACA,kBAACN,EAAD,UACA,4BAAQiC,MACHR,KAAKL,kBAAN,eACUnB,GACJ,GACRkC,SAAUV,KAAKL,kBAAmBc,QAAST,KAAKhB,QAJlD,aAQNc,IAASL,IAAc,kBAAC,WAAD,KAAWO,KAAKR,gBAAgBC,U,GApExDkB,aCZRC,EAAe,SAAClB,EAAQmB,GAAT,MAAkB,CAC1CT,KCIiC,wBDHjCU,QAAS,CAAEpB,OAAQA,EAAQmB,IAAKA,KAGvBE,EAAgB,SAACrB,EAAQmB,GAAT,MAAkB,CAC3CT,KCAkC,yBDClCU,QAAS,CAAEpB,OAAQA,EAAQmB,IAAKA,KAG7B,SAASG,IACZ,OAAO,SAACC,GACJ,IAAIC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBAChDC,EAAcJ,KAAKC,MAAMC,aAAaC,QAAQ,gBAGlD,GAFAD,aAAaG,QAAQ,cAAeL,KAAKM,UAAUF,IACnDN,EAASF,EAAc,UAAWQ,KAC7BL,EAAe,CAEhBG,aAAaG,QAAQ,gBAAiBL,KAAKM,UAD7B,CAAC,CAAE,SAAY,OAAQ,KAAQ,QAAU,CAAE,SAAY,MAAO,KAAQ,YEfhG,IAYeC,eAZS,SAAC3C,GAAD,MAAY,CAChCU,UAAWV,EAAM4C,cACjBzB,mBAAoBnB,EAAMmB,uBAIH,SAACe,GAAD,MAAe,CACtCD,aAAc,kBAAKC,EAASD,MAC5BlC,iBAAkB,SAAC8C,GAAD,OAAUX,EFazB,SAA0BW,GAAO,IAC5BhC,EAAmBgC,EAAnBhC,SAAUC,EAAS+B,EAAT/B,KACZgB,EAAM,CAAE,SAAYjB,EAAU,KAAQC,GACxCgC,GAAY,EAChB,OAAO,SAACZ,GACJA,EAASL,EAAa,YACtB,IAAIM,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBAChDJ,GACAA,EAAcY,KAAI,SAACC,GACf,GAAIA,EAAKnC,WAAaA,GAAYmC,EAAKlC,OAASA,EAM5C,OALAgC,GAAY,EACZhB,EAAG,UAAe,EAClBI,EAASL,EAAa,UAAWC,IACjCQ,aAAaG,QAAQ,cAAeL,KAAKM,UAAUZ,SACnDI,EAASF,EAAc,UAAWF,OAKzCgB,GACDZ,EAASL,EAAa,QAASiB,KEjCF/C,CAAiB8C,KACtD3C,cAAe,SAAC2C,GAAD,OAAUX,EFqCtB,SAAuBW,GAAO,IAE3Bf,EAAM,CAAE,SADae,EAAnBhC,SAC4B,KADTgC,EAAT/B,MAElB,OAAO,SAACoB,GACJA,EAASL,EAAa,YACtB,IAAIM,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBAChDJ,EAGAA,EAAcc,KAAKnB,GAFnBK,EAAgB,GAAGe,OAAOpB,GAI9BA,EAAG,UAAe,EAClBQ,aAAaG,QAAQ,gBAAiBL,KAAKM,UAAUP,IACrDD,EAASL,EAAa,UAAWC,IACjCQ,aAAaG,QAAQ,cAAeL,KAAKM,UAAUZ,IACnDI,EAASF,EAAc,UAAWF,KEpDJ5B,CAAc2C,QAGrCF,CAA6C/C,G,wmBCbrD,IAAMuD,EAAUrE,IAAOsE,KAAV,KAePC,EAAWvE,IAAOwE,OAAV,KCTfC,EAAa,CACfC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAsDJC,E,kDAjDX,WAAYlE,GAAQ,IAAD,8BACf,cAAMA,IAcVmE,OAAQ,WACJ,EAAKnE,MAAMmE,UAdX,EAAKhE,MAAQ,CACTiE,aAAa,GAHF,E,gEAQfhD,KAAKpB,MAAMoC,iB,yCAIXhB,KAAKT,SAAS,CAAEyD,aAAa,M,0CAQ7BhD,KAAKT,SAAS,CAAEyD,aAAa,M,+BAGvB,IACE9C,EAAuBF,KAAKpB,MAA5BsB,mBACF+C,EAAUC,IAAKhD,EAAoB,MAAO,IAEhD,OACI,6BACI,4BAAKF,KAAKpB,MAAMS,MAChB,6BAAMW,KAAKjB,MAAMiE,aACjB,kBAACd,EAAD,eAAkBpC,IAASmD,IAAYA,EAAQrD,SAAYqD,EAAQrD,SAAW,WAC3EE,IAASmD,IAAYA,EAAQE,SAC5B,kBAACf,EAAD,CAAU3B,QAAST,KAAK+C,QAAxB,UACA,kBAACX,EAAD,CAAU3B,QAAST,KAAKoD,iBAAiBC,KAAKrD,OAA9C,SAEJ,kBAAC,IAAD,CACIsD,OAAQtD,KAAKjB,MAAMiE,YACnBxC,MAAO8B,EACPiB,aAAa,EACbC,eAAgBxD,KAAKyD,kBAAkBJ,KAAKrD,OAC5C,6BAAK,kBAAC,EAAD,CAASC,WAAYD,KAAKyD,kBAAkBJ,KAAKrD,SACtD,4BAAQS,QAAST,KAAKyD,kBAAkBJ,KAAKrD,OAA7C,e,GA3CGW,aCNRe,eAVS,SAAC3C,GAAD,MAAY,CAChCU,UAAWV,EAAM4C,cACjBzB,mBAAoBnB,EAAMmB,uBAGH,SAACe,GAAD,MAAe,CACtCD,aAAc,kBAAMC,EAASD,MAC7B+B,OAAO,kBAAM9B,GL2DN,SAAAA,GACHI,aAAaG,QAAQ,cAAeL,KAAKM,UAAU,OACnDR,EAASF,EAAc,UAAW,cK1D3BW,CAA6CoB,GCI7CY,E,uKAXP,OACI,kBAAC9F,EAAD,KACI,kBAACG,EAAD,CAAW4F,IAAKzF,IAChB,kBAACD,EAAD,KACI,kBAAC,EAAD,Y,GANC0C,a,0tDCHd,IAAMiD,GAAY/F,IAAOC,IAAV,MA4DT+F,IAXOhG,IAAOC,IAAV,MAWSD,IAAOC,IAAV,OAeVgG,GAAcjG,IAAOC,IAAV,K,ICUTiG,G,kDA/EX,aAAe,IAAD,8BACV,gBASJC,mBAAqB,SAAC7E,GAAQ,IAAD,EACDA,EAAGC,OAAnBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,KAZd,EAed2E,aAAe,WACX,EAAKC,kBACL,EAAKtF,MAAMuF,SAAS,EAAKpF,QAjBf,EAoBdmF,gBAAkB,WAAO,IAAD,EAC4B,EAAKnF,MAA7CqF,EADY,EACZA,WAAYC,EADA,EACAA,SAAUC,EADV,EACUA,cAC1BF,GAAcE,EAAcC,QAAQ,CAAE,WAAcH,EAAYC,SAAUA,IAC1EC,EAAcE,OAAS,GACvBF,EAAcG,OAAO,EAAG,GAE5B,EAAKlF,SAAS,CAAE,cAAiB+E,KA1BvB,EA6BdI,UAAY,WACkB,EAAK3F,MAAvBuF,cACR,EAAK/E,SAAS,CAAE,cAAiB,MA/BvB,EAkCdoF,iBAAmB,SAACC,GAAU,IAClBN,EAAkB,EAAKvF,MAAvBuF,cACGA,EAAcG,OAAOG,EAAO,GACvC,EAAKrF,SAAS,CAAE,cAAiB+E,KAnCjC,EAAKvF,MAAQ,CACTqF,WAAY,GACZC,SAAU,MACVC,cAAe,IALT,E,qDAwCJ,IAAD,SACwBtE,KAAKpB,MAA1BiG,EADH,EACGA,MAAOC,EADV,EACUA,UAEXC,ECnDL,SAA2BC,GAC9B,IACIC,EAAW,GAQf,OATWD,GAAY,IAElBE,QAAO,SAACC,EAAQC,GAKjB,OAJID,EAAOC,EAAC,qBACRD,EAAOC,EAAC,oBAAyB,EACjCH,EAAQjD,KAAKoD,EAAC,oBAEXD,IACT,IACKF,EDyCeI,CADFnC,IAAK4B,EAAW,eAAgB,KAExCR,EAAkBtE,KAAKjB,MAAvBuF,cACR,OACI,kBAAC,WAAD,KACI,kBAACV,GAAD,KACI,2BAAOxD,KAAK,OAAOkF,GAAG,aAAanF,UAAU,aAAcd,KAAK,aAAaiB,SAAUN,KAAKgE,mBAAoB3D,YAAawE,IAE7H,6BACI,2BAAO1E,UAAU,eAAjB,YACA,4BAAQA,UAAU,gBAAgBd,KAAK,WAAWiB,SAAUN,KAAKgE,oBAC7D,4BAAQuB,IAAI,MAAMjG,MAAM,OAAxB,OACCyF,EAAYjD,KAAI,SAAA0D,GAAI,OACjB,4BAAQD,IAAKC,EAAMlG,MAAOkG,GAAOA,MAHzC,MAOJ,6BACI,4BAAQrF,UAAU,aAAaM,QAAST,KAAKiE,cAA7C,aAGNnE,IAASwE,IAAkB,kBAACT,GAAD,KACzB,yBAAK1D,UAAU,UAAUM,QAAST,KAAK0E,WAAvC,cACA,4BACKJ,EAAcxC,KAAI,SAAC2D,EAASb,GAAV,OACf,kBAACd,GAAD,CAAayB,IAAKX,GACd,8BAAOa,EAAQrB,YADnB,MACwC,8BAAOqB,EAAQpB,UACnD,0BAAMlE,UAAU,UAAUM,QAAS,kBAAI,EAAKkE,iBAAiBC,KAA7D,gB,GAtERjE,aECTe,gBALS,SAAC3C,GAAD,MAAY,CAChC2G,aAAc3G,EAAM2G,aACpBZ,UAAW/F,EAAM+F,aAGmB,GAAzBpD,CAA6BqC,I,+9CCLrC,IAAM4B,GAAO9H,IAAOC,IAAV,MAQJ8H,GAAM/H,IAAOC,IAAV,KACuDE,MAe1D6H,GAAQhI,IAAOC,IAAV,MAQLgI,GAAOjI,IAAOC,IAAV,MASJiI,GAAOlI,IAAOC,IAAV,MAWJkI,GAAcnI,IAAOC,IAAV,MCETmI,G,kDA/CX,aAAe,IAAD,8BACV,gBAMJjC,mBAAqB,SAACkC,GAClB,EAAK3G,SAAS,CAAE4G,WAAYD,KARlB,EAWdE,WAAa,SAACtB,GAAe,IACjBqB,EAAe,EAAKpH,MAApBoH,WACJC,EAAatB,EAOjB,OANIqB,IACAC,EAAatB,EAAUuB,QAAO,SAACC,GAC3B,OAAQA,EAAK,MAAUC,cAAcC,SAASL,EAAU,WAAeI,iBACvC,QAAxBJ,EAAW9B,SAAqBiC,EAAMG,kBAAoBH,EAAMG,oBAAsBN,EAAW9B,cAG1G+B,GAlBP,EAAKrH,MAAQ,CACToH,WAAY,IAHN,E,qDAuBJ,IACErB,EAAc9E,KAAKpB,MAAnBkG,UACFsB,EAAapG,KAAKoG,WAAWtB,GACnC,OACI,kBAACa,GAAD,KACI,kBAAC,GAAD,CAAWd,MAAO,kBAAmBV,SAAUnE,KAAKgE,qBACpD,kBAACgC,GAAD,KACMlG,IAASsG,GASO,qDARd,kBAAC,WAAD,KACKA,EAAWtE,KAAI,SAACwE,EAAO1B,GAAR,OACZ,kBAACgB,GAAD,CAAKL,IAAKX,EAAO8B,WAAUJ,EAAMK,UAC7B,kBAACd,GAAD,KAAQS,EAAMM,gBACd,kBAACd,GAAD,KAAOQ,EAAMG,mBACb,kBAACV,GAAD,KAAOO,EAAMO,aAAb,IAA2B,uBAAG1G,UAAU,cAAcK,MAAO,CAAE,MAAS,QAAS,SAAY,WAC7F,kBAAC,IAAD,CAAcL,UAAU,yB,GAtCxCQ,aCNLe,eAAQ,KAAM,GAAdA,CAAkBuE,I,0rDCD1B,IAAMa,GAAYjJ,IAAOC,IAAV,MAoBTiJ,IAbUlJ,IAAOC,IAAV,MAaMD,IAAOG,IAAV,OAKVgJ,GAAWnJ,IAAOC,IAAV,MAMRmJ,GAAgBpJ,IAAOC,IAAV,MCgEXoJ,G,kDAlFX,aAAe,IAAD,8BACV,gBAYJC,gBAAkB,SAACrC,GACf,IAAMpF,EAASwD,IAAK4B,EAAW,SAAU,IACnCG,EAAU/B,IAAK4B,EAAW,eAAgB,IAChD,OAAQpF,GACJ,IAAK,UACD,OAAO,kBAAC,GAAD,CAAOoF,UAAWG,IAC7B,IAAK,UACD,OAAO,kBAAC8B,GAAD,CAAYpD,IAAKvF,EAAagJ,IAAI,eAC7C,IAAK,QACD,OAAO,uDACX,QACI,OAAO,OAxBL,EAkCdC,SAAW,WAAO,IAAD,EACwB,EAAKtI,MAAlCuI,EADK,EACLA,YADK,EACQC,YAClBD,EAAc,GACb,EAAK/H,SAAS,CACV+H,YAAa,EAAKvI,MAAMuI,YAAc,GACvC,WACCtH,KAAKpB,MAAM4I,UAAUxH,KAAKjB,MAAMuI,cAClCjE,KAFC,kBAvCG,EA6CdoE,SAAW,WAAO,IAAD,EACwB,EAAK1I,MAD7B,EACLuI,YADK,EACQC,aAEjB,EAAKhI,SAAS,CACV+H,YAAa,EAAKvI,MAAMuI,YAAc,GACvC,WACCtH,KAAKpB,MAAM4I,UAAUxH,KAAKjB,MAAMuI,cAClCjE,KAFC,kBAlDG,EAwDdqE,gBAAkB,WAAO,IACbJ,EAAgB,EAAKvI,MAArBuI,YACR,EAAK1I,MAAM4I,UAAUF,IAxDrB,EAAKvI,MAAQ,CACTuI,YAAa,EACbC,YAAc,GAJR,E,gEAQO,IACTD,EAAgBtH,KAAKjB,MAArBuI,YACRtH,KAAKpB,MAAM4I,UAAUF,K,gDAkBCvH,EAAW4H,GAAW,IACpC7C,EAAc/E,EAAd+E,UACR9E,KAAKT,SAAS,CAAC,YAAe2D,IAAK4B,EAAW,YAAa,KAC3D9E,KAAKT,SAAS,CAAC,YAAe2D,IAAK4B,EAAW,mBAAoB,O,+BA8B5D,IACEA,EAAc9E,KAAKpB,MAAnBkG,UACFpF,EAASwD,IAAK4B,EAAW,SAAU,IAFpC,EAGgC9E,KAAKjB,MAAlCuI,EAHH,EAGGA,YAAaC,EAHhB,EAGgBA,YACrB,OACI,kBAACP,GAAD,KACI,kBAACF,GAAD,KACK9G,KAAKmH,gBAAgBrC,IAE1B,kBAACmC,GAAD,KACQ,yBAAK9G,UAAU,cACX,4BAAQA,UAA4B,IAAhBmH,EAAqB,WAAa,GAAI7G,QAAST,KAAKqH,UAAxE,QACA,4BAAQlH,UAAU,eAA2B,YAAXT,EAAuB4H,EAAc,uBAAGnH,UAAU,oBACpF,4BAAQA,UAAYmH,IAAgBC,EAAe,WAAa,GAAK9G,QAAST,KAAKyH,UAAnF,e,GA3EJ9G,aCVXiH,GAAiB,SAAClI,EAAQwG,EAAM2B,GAAf,MAA8B,CACxDzH,KfH4B,mBeI5BU,QAAS,CAAE,OAAUpB,EAAQ,KAAQwG,KCFzC,IAQexE,gBARS,SAAC3C,GAAD,MAAY,CAChC+F,UAAW/F,EAAM+F,cAGM,SAAC7D,GAAD,MAAe,CACtCuG,UAAW,SAACM,GAAD,OAAY7G,EDApB,SAAmB6G,GACtB,OAAO,SAAA7G,GACHA,EAAS2G,GAAe,YACxBG,MAAM,4GAA8GD,EAAQ,CACxHE,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGnBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAlD,GACFqD,QAAQC,IAAItD,GAEZ/D,EAAS2G,GAAe,UAAW5C,OACpCuD,OAAM,SAAAC,GACLvH,EAAS2G,GAAe,QAAS,SChBbJ,CAAUM,QAG/BpG,CAA6CwF,ICE7CuB,OATf,WACE,OACE,yBAAKtI,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,kBCGcuI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZN,IAmCeC,gBAAgB,CAC3BjE,UApCc,WAAyB,IAAxB/F,EAAuB,uDAAf,GAAIiK,EAAW,uCACtC,OAAQA,EAAO5I,MACX,InBNwB,mBmBOpB,OAAO,2BAAKrB,GAAUiK,EAAOlI,SACjC,QACI,OAAO/B,IAgCf4C,cA7BkB,WAAyB,IAAxB5C,EAAuB,uDAAf,GAAIiK,EAAW,uCAC1C,OAAQA,EAAO5I,MACX,InBT6B,wBmBUzB,OAAO,2BAAKrB,GAAUiK,EAAOlI,SACjC,QACI,OAAO/B,IAyBfmB,mBArBuB,WAAyB,IAAxBnB,EAAuB,uDAAf,GAAIiK,EAAW,uCAC/C,OAAQA,EAAO5I,MACX,InBjB8B,yBmBkB1B,OAAO,2BAAKrB,GAAUiK,EAAOlI,SACjC,QACI,OAAO/B,IAiBf2G,aAbiB,WAAyB,IAAxB3G,EAAuB,uDAAf,GAAIiK,EAAW,uCACzC,OAAQA,EAAO5I,MACX,InBzB4B,uBmB0BxB,OAAO,2BAAKrB,GAAUiK,EAAOlI,SACjC,QACI,OAAO/B,MC1BbkK,I,OAAcC,aAClBC,aAAgBC,MAChBT,OAAOU,kBAAoBV,OAAOU,kBAAkB,CAAEhK,KAAM,YAAe,SAAAiK,GAAC,OAAIA,KAG5EC,GAAWC,aAAYC,QAAaC,EAAWT,IAErDU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOP,IACjB,kBAAC,GAAD,QAGFQ,SAASC,eAAe,SF2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjC,MAAK,SAAAkC,GACJA,EAAaC,gBAEd9B,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EAAM8B,a,mBGzI5BC,EAAOC,QAAU,IAA0B,oC,kGCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.7aa8221b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderMain = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const HeaderImg = styled.img`\n    width: 60px;\n    height: 60px;\n`;\n\nexport const Leftpanel = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin: 0 10px;\n`;\n\nexport const MainTitle = styled.div`\n    \n`;","export const HeaderImage = require('../assets/moviedb.png');\nexport const LoadingIcon = require('../assets/darkLoad.gif');\nexport const MovieIcon = require('../assets/green.jpg');\n","import styled from 'styled-components';\n\nexport const MainBlock = styled.div`\n.form {border: 3px solid #f1f1f1;}\n\ninput[type=text], input[type=password] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\nbutton {\n  background-color: rgb(8, 167, 232);\n  color: white;\n  padding: 14px 20px;\n  margin: 8px 0;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  opacity: 0.8;\n}\n\n.cancelbtn {\n  width: auto;\n  padding: 10px 18px;\n  background-color: #f44336;\n}\n\n.imgcontainer {\n  text-align: center;\n  margin: 24px 0 12px 0;\n}\n\nimg.avatar {\n  width: 40%;\n  border-radius: 50%;\n}\n\n.container {\n  padding: 16px;\n}\n\nspan.psw {\n  float: right;\n  padding-top: 16px;\n}\n\n@media screen and (max-width: 300px) {\n  span.psw {\n     display: block;\n     float: none;\n  }\n  .cancelbtn {\n     width: 100%;\n  }\n}\n`;\n\nexport const ErrorField = styled.div`\n  padding-bottom: 18px;\n  text-align: center;\n  color: indianred;\n`;\n\nexport const Divider = styled.div`\n    width: 40px;\n    margin: 20px;\n    text-align: center;\n    color: #676767;\n`;","import React, { Component, Fragment } from 'react';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport {\n    MainBlock, ErrorField, Divider\n} from './styles';\n\nconst styles = {\n    buttonDisabled: {\n      backgroundColor: \"#ccc\",\n      color: \"#999\"\n    }\n  };\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { userName: '', pswd: '' }\n    }\n\n    login = () => {\n        this.props.getLoginResponse(this.state);\n    }\n\n    signUp = () => {\n        this.props.submitNewUsrs(this.state);\n    }\n    componentWillReceiveProps(nextProps) {\n        if ((nextProps.loginData.status === 'success')) {\n            this.props.closeModal();\n        }\n    }\n\n    changeEvent = (ev) => {\n        const { name, value } = ev.target;\n        this.setState({ [name]: value });\n    }\n\n    showLoginStatus = (loginData) => {\n        switch (loginData.status) {\n            case 'success':\n                return null;\n            case 'loading':\n                return 'loading...';\n            case 'error':\n                return <ErrorField>Username or Password Invalid!</ErrorField>;\n            default:\n                return null;\n        }\n    }\n\n    checkValidation = () => {\n        const { userName, pswd } = this.state;\n        if (!_isEmpty(userName) && !_isEmpty(pswd)) {\n            return false;\n        }\n        return true;\n    }\n\n\n    render() {\n        const { loginData, submitUserResponse } = this.props;\n        return (\n            <MainBlock>\n                <div className=\"form\">\n                    <div className=\"container\">\n                        <label><b>Username</b></label>\n                        <input type=\"text\" placeholder=\"Enter Username\" name=\"userName\" onChange={this.changeEvent} required />\n\n                        <label><b>Password</b></label>\n                        <input type=\"password\" placeholder=\"Enter Password\" name=\"pswd\" onChange={this.changeEvent} required />\n                        <div style={{ 'display': 'flex' }}>\n                            <button onClick={this.login}>Login</button>\n                            <Divider>/</Divider>\n                            <button style={\n                                (this.checkValidation())\n                                    ? {...styles.buttonDisabled }\n                                    : {}\n                            } disabled={this.checkValidation()} onClick={this.signUp}>SignUp</button>\n                        </div>\n\n                    </div>\n                    {!_isEmpty(loginData) && <Fragment>{this.showLoginStatus(loginData)}</Fragment>}\n                </div>\n            </MainBlock>\n        )\n    }\n}\n\nexport default SignIn;","import { LOGIN_PROCESS_LOADING, SUBMIT_PROCESS_LOADING } from '../actionTypes';\n\nexport const loginProcess = (status, obj) => ({\n    type: LOGIN_PROCESS_LOADING,\n    payload: { status: status, obj: obj }\n})\n\nexport const submitProcess = (status, obj) => ({\n    type: SUBMIT_PROCESS_LOADING,\n    payload: { status: status, obj: obj }\n})\n\nexport function setLocalData() {\n    return (dispatch) => {\n        let userLoginData = JSON.parse(localStorage.getItem('userLoginData'));\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n        dispatch(submitProcess('success', currentUser));\n        if (!userLoginData) {\n            let userArr = [{ 'userName': 'anji', 'pswd': 'anji' }, { 'userName': 'asw', 'pswd': 'asw' }]\n            localStorage.setItem('userLoginData', JSON.stringify(userArr));\n        }\n    }\n}\n\nexport function getLoginResponse(vals) {\n    const { userName, pswd } = vals;\n    const obj = { 'userName': userName, 'pswd': pswd };\n    let validUser = false;\n    return (dispatch) => {\n        dispatch(loginProcess('loading'));\n        let userLoginData = JSON.parse(localStorage.getItem('userLoginData'));\n        if (userLoginData) {\n            userLoginData.map((user) => {\n                if (user.userName === userName && user.pswd === pswd) {\n                    validUser = true;\n                    obj['loggedIn'] = true;\n                    dispatch(loginProcess('success', obj));\n                    localStorage.setItem('currentUser', JSON.stringify(obj));\n                    dispatch(submitProcess('success', obj));\n                    return;\n                }\n            });\n        }\n        if (!validUser) {\n            dispatch(loginProcess('error', validUser));\n        }\n    }\n}\n\nexport function submitNewUsrs(vals) {\n    const { userName, pswd } = vals;\n    const obj = { 'userName': userName, 'pswd': pswd };\n    return (dispatch) => {\n        dispatch(loginProcess('loading'));\n        let userLoginData = JSON.parse(localStorage.getItem('userLoginData'));\n        if(!userLoginData){\n            userLoginData = [].concat(obj);\n        }else{\n            userLoginData.push(obj);\n        }\n        obj['loggedIn'] = true;\n        localStorage.setItem('userLoginData', JSON.stringify(userLoginData));\n        dispatch(loginProcess('success', obj));\n        localStorage.setItem('currentUser', JSON.stringify(obj));\n        dispatch(submitProcess('success', obj));\n    }\n}\n\nexport function logout() {\n    return dispatch => {\n        localStorage.setItem('currentUser', JSON.stringify(null));\n        dispatch(submitProcess('success', null));\n    }\n}","// export const FETCH_ALL_BOOKS = 'FETCH_ALL_BOOKS';\n// export const FETCH_ALL_CHAPTER_BOOKID = 'FETCH_ALL_CHAPTER_BOOKID';\nexport const FETCH_ALL_MOVIES = 'FETCH_ALL_MOVIES';\n// export const FETCH_ALL_QUOTES_MOVIEID = 'FETCH_ALL_QUOTES_MOVIEID';\n// export const FETCH_ALL_CHARACTERS = 'FETCH_ALL_CHARACTERS';\n// export const FETCH_ALL_QUOTE_CHARID = 'FETCH_ALL_QUOTE_CHARID';\n// export const FETCH_ALL_QUOTES = 'FETCH_ALL_QUOTES';\nexport const LOGIN_PROCESS_LOADING = 'LOGIN_PROCESS_LOADING';\nexport const SUBMIT_PROCESS_LOADING = 'SUBMIT_PROCESS_LOADING';\nexport const GET_LANGUAGE_OPTIONS = 'GET_LANGUAGE_OPTIONS';\n","import { connect } from 'react-redux';\nimport SignIn from './component';\nimport { getLoginResponse, submitNewUsrs, setLocalData} from '../../../actions/login';\n\nconst mapStateToProps = (state) => ({\n    loginData: state.loginResponse,\n    submitUserResponse: state.submitUserResponse,\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setLocalData: () =>dispatch(setLocalData()),\n    getLoginResponse: (vals) => dispatch(getLoginResponse(vals)),\n    submitNewUsrs: (vals) => dispatch(submitNewUsrs(vals)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import styled from 'styled-components';\n\n\nexport const UserBlc = styled.span`\n    display: inline-block;\n    margin: 0 10px;\n    background-color: rgb(30, 109, 11);\n    color: white;\n    padding: 5px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    font-size: 12px;\n    margin-right: 10px;\n    border-radius: 10px;\n    font-weight: 500;\n`;\n\nexport const LoginBtn = styled.button`\n    background-color: transparent;\n    color: white;\n    padding: 3px 20px;\n    margin: 8px 0;\n    border: 2px solid rgb(30, 109, 11);\n    cursor: pointer;\n    font-size: 12px;\n`;","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\nimport SignIn from './SignIn/container';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport {\n    UserBlc, LoginBtn\n} from './styles';\n\nconst modalStyle = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nclass LoginApp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.setLocalData();\n    }\n\n    openModalHandler() {\n        this.setState({ isModalOpen: true });\n    }\n\n    logout =() =>{\n        this.props.logout();\n    }\n\n    closeModalHandler() {\n        this.setState({ isModalOpen: false });\n    }\n\n    render() {\n        const { submitUserResponse } = this.props;\n        const userObj = _get(submitUserResponse, 'obj', {});\n\n        return (\n            <div>\n                <h2>{this.props.name}</h2>\n                <div>{this.state.isModalOpen}</div>\n                <UserBlc>Hello {(!_isEmpty(userObj) && userObj.userName) ? userObj.userName : \"Friend\"}</UserBlc>\n                {(!_isEmpty(userObj) && userObj.loggedIn) ?\n                    <LoginBtn onClick={this.logout}>Logout</LoginBtn> :\n                    <LoginBtn onClick={this.openModalHandler.bind(this)}>Login</LoginBtn>\n                }\n                <ReactModal\n                    isOpen={this.state.isModalOpen}\n                    style={modalStyle}\n                    ariaHideApp={false}\n                    onRequestClose={this.closeModalHandler.bind(this)}>\n                    <div><SignIn  closeModal={this.closeModalHandler.bind(this)}/></div>\n                    <button onClick={this.closeModalHandler.bind(this)}>Close</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}\n\nexport default LoginApp;","import { connect } from 'react-redux';\nimport LoginApp from './component';\nimport {setLocalData, logout} from '../../actions/login';\n\nconst mapStateToProps = (state) => ({\n    loginData: state.loginResponse,\n    submitUserResponse: state.submitUserResponse,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setLocalData: () => dispatch(setLocalData()),\n    logout:() => dispatch(logout())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginApp);","import React, {Component} from 'react';\nimport {HeaderMain, HeaderImg, Leftpanel, MainTitle} from './styles';\nimport {HeaderImage} from '../../constants';\nimport LoginApp from '../Login/container';\n\nclass Header extends Component{\n    render(){\n        return(\n            <HeaderMain>\n                <HeaderImg src={HeaderImage} />\n                <Leftpanel>\n                    <LoginApp/>\n                </Leftpanel>\n            </HeaderMain>\n        )\n    }\n}\n\nexport default Header;","import styled from 'styled-components';\n\nexport const SearchBox = styled.div`\nwidth: 100%;\ndisplay: flex;\nmargin: 0 auto;\njustify-content: center;\n@media only screen and (max-width: 600px) {\n    width: 100%;\n    margin: 0 5px;\n    flex-direction: column;\n}\n.custom-select {\n    position: relative;\n    font-family: Arial;\n    width: 200px;\n    height: 35px;\n  }\n  .search-bar{\n    @media only screen and (max-width: 600px) {\n        width: 80%;\n    }\n    width: 35%;\n    border-radius: 5px;\n    border-color: transparent;\n    padding: 10px;\n    height: 35px;\n    margin-top: 6px;\n  }\n  .search-text{\n    border-radius: 5px;\n    border-color: transparent;\n    padding: 10px;\n    height: 35px;\n  }\n  .search-btn{\n    display: inline-block;\n    background-color: rgb(30, 109, 11);\n    color: white;\n    padding: 5px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    font-size: 12px;\n    margin: 10px;\n    border-radius: 10px;\n    font-weight: 500;\n  }\n\n`;\n\nexport const Icon = styled.div`\n    color: #dcdcdc;\n    background-color: linear-gradient(45deg, #044348b3, #ad84397a);\n    font-size: 28px;\n    margin: 5px 10px 0 10px;\n    position: relative;\n    float: right;\n    top: -47px;\n    right: -17px;\n`;\n\nexport const HistoryBox = styled.div`\n    color: #5a574e;\n    width: 48%;\n    .del-all{\n        display: flex;\n        justify-content: flex-end;\n        cursor: pointer;\n    }\n    .del-one{\n        position: absolute;\n        right:0;\n        cursor: pointer;\n    }\n`;\n\nexport const HistoryList = styled.div`\n    position: relative; \n`;\n\n\n","import React, { Component, Fragment } from 'react';\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\nimport _isEmpty from 'lodash/isEmpty';\nimport { SearchBox, HistoryBox, HistoryList } from './styles';\nimport { getMovieLanguages } from '../../../utils';\n\nclass SearchBar extends Component {\n    constructor() {\n        super();\n        this.state = {\n            searchText: '',\n            language: 'All',\n            searchHistory: []\n        }\n    }\n\n\n    handleSearchChange = (ev) => {\n        const { name, value } = ev.target;\n        this.setState({ [name]: value });\n    }\n\n    submitSearch = () => {\n        this.getLatestSearch();\n        this.props.sendData(this.state);\n    }\n\n    getLatestSearch = () => {\n        const { searchText, language, searchHistory } = this.state;\n        if (searchText) { searchHistory.unshift({ 'searchText': searchText, language: language }); }\n        if (searchHistory.length > 3) {\n            searchHistory.splice(3, 1);\n        }\n        this.setState({ 'searchHistory': searchHistory });\n    }\n\n    deleteAll = () =>{\n        const { searchHistory } = this.state;\n        this.setState({ 'searchHistory': [] });\n    }\n\n    deleteOneHistory = (index) =>{\n        const { searchHistory } = this.state;\n        let temp = searchHistory.splice(index ,1);\n        this.setState({ 'searchHistory': searchHistory });\n    }\n\n    render() {\n        const { title, allMovies } = this.props;\n        const results = _get(allMovies, 'data.results', '');\n        let langOptions = getMovieLanguages(results);\n        const { searchHistory } = this.state;\n        return (\n            <Fragment>\n                <SearchBox>\n                    <input type=\"text\" id=\"search-bar\" className=\"search-bar\"  name=\"searchText\" onChange={this.handleSearchChange} placeholder={title} />\n                    {/* <label className=\"search-text\"> | </label> */}\n                    <div>\n                        <label className=\"search-text\">Language</label>\n                        <select className=\"custom-select\" name=\"language\" onChange={this.handleSearchChange} >\n                            <option key='All' value=\"All\">All</option>\n                            {langOptions.map(lang =>\n                                <option key={lang} value={lang}>{lang}</option>\n                            )};\n                    </select>\n                    </div>\n                    <div>\n                        <button className=\"search-btn\" onClick={this.submitSearch}>Search</button>\n                    </div>\n                </SearchBox>\n                {!_isEmpty(searchHistory) && <HistoryBox>\n                    <div className=\"del-all\" onClick={this.deleteAll}>Delete All</div>\n                    <ul>\n                        {searchHistory.map((history, index) =>\n                            <HistoryList key={index} >\n                                <span>{history.searchText}</span> / <span>{history.language}</span> \n                                <span className=\"del-one\" onClick={()=>this.deleteOneHistory(index)}>X</span>\n                            </HistoryList>\n                        )}\n                    </ul>\n                </HistoryBox>}\n            </Fragment>\n        )\n    }\n}\n\nexport default SearchBar;","export function getMovieLanguages(response){\n    let resp = response || [];\n    let results =  [];\n    resp.reduce((unique, o) => {\n        if(!unique[o['original_language']]) {\n            unique[o['original_language']] = true;\n            results.push(o['original_language']);\n        }\n        return unique;\n    },{});\n    return results;\n}","import { connect } from 'react-redux';\nimport SearchBar from './component';\n\nconst mapStateToProps = (state) => ({\n    allLanguages: state.allLanguages,\n    allMovies: state.allMovies\n})\n\nexport default connect(mapStateToProps, {})(SearchBar);\n","import styled from 'styled-components';\nimport img from '../../../assets/green1.jpg';\n\nexport const Grid = styled.div`\n    width: 100%;\n    margin-left: 10%;\n    .m-tooltip{\n        width: 200px;\n    }\n`;\n\nexport const Box = styled.div`\n    background: linear-gradient(rgba(0,0,0,.5), rgba(0,0,0,.5)), url(${img}) no-repeat center;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    width: 25%;\n    height: 120px;\n    margin: 25px;\n    float: left;\n    box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);\n    // box-shadow: 0 19px 38px rgba(0, 0, 0, 0.95), 0 15px 12px rgba(1, 0, 0, 1);\n    position: relative;\n    padding: 10px;\n`;\n\nexport const Title = styled.div`\n    font-family: monospace;\n    font-size: 18px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\nexport const Lang = styled.div`\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    background-color: rgb(30, 109, 11);\n    padding: 5px;\n    text-transform: uppercase;\n`;\n\nexport const Rate = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 5px;\n    text-transform: uppercase;\n    font-size: 30px;\n    color: #5a5757;\n`;\n\n\nexport const ViewDetails = styled.div`\n    margin-top: 20px;   \n`;","import React, { Component, Fragment } from 'react';\nimport ReactTooltip from \"react-tooltip\";\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport SearchBar from '../SearchBar/container';\nimport { Grid, Box, ViewDetails, \n    Title, Lang, Rate\n } from './styles';\n\nclass Tiles extends Component {\n    constructor() {\n        super();\n        this.state = {\n            searchData: ''\n        }\n    }\n\n    handleSearchChange = (data) => {\n        this.setState({ searchData: data });\n    }\n\n    filterData = (allMovies) => {\n        const { searchData } = this.state;\n        let filterData = allMovies;\n        if (searchData) {\n            filterData = allMovies.filter((movie) => {\n                return (movie['title'].toLowerCase().includes(searchData['searchText'].toLowerCase()))\n                    && (searchData.language === 'All' ? movie.original_language : movie.original_language === searchData.language);\n            })\n        }\n        return filterData;\n    }\n\n    render() {\n        const { allMovies } = this.props;\n        const filterData = this.filterData(allMovies);\n        return (\n            <Grid>\n                <SearchBar title={\"Movie titles...\"} sendData={this.handleSearchChange} />\n                <ViewDetails>\n                    {!_isEmpty(filterData) ?\n                        <Fragment>\n                            {filterData.map((movie, index) =>\n                                <Box key={index} data-tip={movie.overview}>\n                                    <Title>{movie.original_title}</Title>\n                                    <Lang>{movie.original_language}</Lang>\n                                    <Rate>{movie.vote_average} <i className=\"fas fa-star\" style={{ 'color': 'brown', 'fontSize': '25px' }}></i></Rate>\n                                    <ReactTooltip className=\"m-tooltip\" />\n                                </Box>)}\n                        </Fragment> : <div>No Results Found....</div>\n                    }\n                </ViewDetails>\n            </Grid>\n        )\n    }\n}\n\nexport default Tiles;","import { connect } from 'react-redux';\nimport Tiles from './component';\n\nexport default connect(null, {})(Tiles);","import styled from 'styled-components';\n\nexport const MoviesBox = styled.div`\n    display: flex;\n    flex-wrap: wrap; \n    justify-content: center; \n    align-items: center;\n`;\n\nexport const Heading = styled.div`\n    background-color: rgba(22, 23, 23, 0.12);\n    color: #f9f8f6;\n    padding: 5px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    font-size: 25px;\n    font-family: cursive;\n    font-weight: 900;\n    letter-spacing: 5px;\n`;\n\nexport const LoadingImg = styled.img`\n    width: 200px;\n    height: 200px;\n`;\n\nexport const MainView = styled.div`\n    display: flex;\n    flex-direction: column;\n    color: #FFFFFF;\n`;\n\nexport const PaginationBox = styled.div`\n    display: flex;\n    flex-wrap: wrap; \n    justify-content: center; \n    align-items: center;\n    margin-top: 20px;\n    .pagination {\n        display: inline-block;\n      }\n      \n      .pagination button {\n        color: #FFFFFF;\n        float: left;\n        padding: 8px 16px;\n        text-decoration: none;\n        background-color: rgb(30, 109, 11);\n        border-radius: 5px;\n        margin: 5px;\n      }\n\n      .disabled {\n        pointer-events: none;\n        cursor: default;\n        opacity: 0.6;\n      }\n\n      .currentpage {\n        pointer-events: none;\n        cursor: default;\n      }\n      \n      .pagination button.active {\n        background-color: #4CAF50;\n        color: white;\n        border-radius: 5px;\n      }\n      \n      .pagination button:hover:not(.active) {\n        background-color: #ddd;\n        border-radius: 5px;\n      }\n`;","import React, { Component } from 'react';\n\nimport Pagination from \"react-js-pagination\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport Tiles from './Tiles/container';\nimport {\n    MoviesBox, LoadingImg,\n    MainView, PaginationBox\n} from './styles';\nimport { LoadingIcon } from '../../constants';\n\nclass Dashboard extends Component {\n    constructor() {\n        super();\n        this.state = {\n            currentPage: 1,\n            total_pages : 0\n        }\n    }\n\n    componentDidMount() {\n        const { currentPage } = this.state;\n        this.props.getMovies(currentPage);\n    }\n\n    showMovieStatus = (allMovies) => {\n        const status = _get(allMovies, 'status', '');\n        const results = _get(allMovies, 'data.results', '');\n        switch (status) {\n            case 'success':\n                return <Tiles allMovies={results} />;\n            case 'loading':\n                return <LoadingImg src={LoadingIcon} alt=\"Loading...\" />;\n            case 'error':\n                return <div>Something went wrong!!</div>;\n            default:\n                return null;\n        }\n    }\n\n    componentWillReceiveProps(nextProps, prevProps){\n        const { allMovies } = nextProps;\n        this.setState({'currentPage': _get(allMovies, 'data.page', 1)});\n        this.setState({'total_pages': _get(allMovies, 'data.total_pages', 0)});\n    }\n\n    goToPrev = () => {\n        const { currentPage, total_pages } = this.state;\n        if(currentPage > 1){\n            this.setState({\n                currentPage: this.state.currentPage - 1,\n            }, function () {\n                this.props.getMovies(this.state.currentPage);\n            }.bind(this));\n        }\n    }\n\n    goToNext = () => {\n        const { currentPage, total_pages } = this.state;\n        if(currentPage < total_pages){\n            this.setState({\n                currentPage: this.state.currentPage + 1,\n            }, function () {\n                this.props.getMovies(this.state.currentPage);\n            }.bind(this));\n        }\n    }\n\n    getMoviesByPage = () => {\n        const { currentPage } = this.state;\n        this.props.getMovies(currentPage);\n    }\n\n    render() {\n        const { allMovies } = this.props;\n        const status = _get(allMovies, 'status', '');\n        const { currentPage, total_pages } = this.state;\n        return (\n            <MainView>\n                <MoviesBox>\n                    {this.showMovieStatus(allMovies)}\n                </MoviesBox>\n                <PaginationBox>\n                        <div className=\"pagination\">\n                            <button className={(currentPage === 1) ? 'disabled' : ''} onClick={this.goToPrev}>&laquo;</button>\n                            <button className='currentpage' >{status === 'success' ? currentPage : <i className=\"fas fa-spinner\"></i>}</button>\n                            <button className={(currentPage === total_pages) ? 'disabled' : ''}  onClick={this.goToNext}>&raquo;</button>\n                        </div>\n                </PaginationBox>\n            </MainView>\n        )\n    }\n}\n\nexport default Dashboard;","import {\n    FETCH_ALL_MOVIES, GET_LANGUAGE_OPTIONS,\n} from '../actionTypes';\n\nexport const fetchAllMovies = (status, data, languages) => ({\n    type: FETCH_ALL_MOVIES,\n    payload: { 'status': status, 'data': data}\n});\n\nexport function getMovies(pageNo) {\n    return dispatch => {\n        dispatch(fetchAllMovies('loading'));\n        fetch('https://api.themoviedb.org/3/movie/upcoming?api_key=81f382d33088c6d52099a62eab51d967&language=en-US&page=' + pageNo, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response);\n                // getMovieLanguages(response);\n                dispatch(fetchAllMovies('success', response));\n            }).catch(error => {\n                dispatch(fetchAllMovies('error', {}));\n            })\n    }\n}\n\n","import { connect } from 'react-redux';\nimport Dashboard from './component';\nimport {getMovies} from '../../actions/movies';\n\nconst mapStateToProps = (state) => ({\n    allMovies: state.allMovies,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getMovies: (pageNo) => dispatch(getMovies(pageNo)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React from 'react';\nimport './App.css';\nimport Header from './features/Header/component';\nimport Dashboard from './features/Dashboard/container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport {\n    FETCH_ALL_MOVIES, LOGIN_PROCESS_LOADING,\n    SUBMIT_PROCESS_LOADING, GET_LANGUAGE_OPTIONS,\n} from '../actionTypes';\n\nconst allMovies = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_ALL_MOVIES:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\nconst loginResponse = (state = {}, action) => {\n    switch (action.type) {\n        case LOGIN_PROCESS_LOADING:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nconst submitUserResponse = (state = {}, action) => {\n    switch (action.type) {\n        case SUBMIT_PROCESS_LOADING:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nconst allLanguages = (state = [], action) => {\n    switch (action.type) {\n        case GET_LANGUAGE_OPTIONS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    allMovies: allMovies,\n    loginResponse: loginResponse,\n    submitUserResponse: submitUserResponse,\n    allLanguages: allLanguages\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nconst middlewares = compose(\n  applyMiddleware(thunk),\n  window.devToolsExtension ? window.devToolsExtension({ name: 'lordApp' }) : f => f\n);\n\nconst appStore = createStore(rootReducer, undefined, middlewares);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/green1.fe397bb9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moviedb.2a29441c.png\";","module.exports = __webpack_public_path__ + \"static/media/darkLoad.5b1fe33d.gif\";","module.exports = __webpack_public_path__ + \"static/media/green.ef5a7b09.jpg\";"],"sourceRoot":""}